dist: xenial   # required for Python >= 3.7
os: linux
language: python

services: docker

cache:
  - pip

git:
  depth: false
  autocrlf: false
  

before_install:
  - echo $CODECOV_TOKEN
  - date
  - docker pull debian:buster
#   - docker run --name pi -d --restart always debian:buster
  - docker run --name pi -d -t debian:buster
  - docker ps
  - docker start pi
#   - docker-compose up -d --build pi
#   - docker-compose ps
#   - docker build --help
#   - docker build  -t pi:test .
  - ls
  - pwd
  - docker ps
  - docker exec --help
  - docker exec pi apt update
  - docker exec pi apt install -y python3 python3-pip python3-dev python3-setuptools python3-wheel git libsm6 libXrender1
  - docker exec pi git clone  --branch=master https://github.com/HLNN/test.git HLNN/test
  - docker exec pi python3 -m pip install --upgrade black beautifulsoup4 requests codecov coverage opencv-python numpy serial matplotlib
# import cv2
# import re
# import os
# import urllib.request as requests
# import time
# import numpy
# import threading
# import random
# import serial
# import matplotlib.pyplot as plot

install:
  - docker exec pi python3 -m pip install --upgrade black beautifulsoup4 requests codecov coverage
#   - pip install --upgrade black
#   - pip install --upgrade beautifulsoup4
#   - pip install --upgrade requests
#   - pip install --upgrade codecov
#   - pip install --upgrade coverage
#   - pip install --upgrade poetry
#   - poetry install
#   - poetry run python --version

script:
#   - coverage run movie.py
  - docker exec pi bash -c "cd HLNN/test;pwd;coverage run raspberry\ pi/cube.py;codecov -t a333d0f7-1944-4eb2-a032-3d2c6c5b51a4"
#   - docker exec pi coverage run movie.py
  
after_success:
#   - pi codecov
  - true

aliases:
  test_mac: &test_mac
    os: osx
    language: shell
    osx_image: xcode11.2
    cache:
      directories:
        - $HOME/.pyenv/versions
    before_install:
      - eval "$(pyenv init -)"
      - pyenv install -s $JRNL_PYTHON_VERSION
      - pyenv global $JRNL_PYTHON_VERSION
      - pip install --upgrade pip
      - pip --version
  test_windows: &test_windows
    os: windows
    language: shell
    cache:
      directories:
        - /c/Python36
        - /c/Python37
        - /c/Python38
    before_install:
      - choco install python --version $JRNL_PYTHON_VERSION
      - python -m pip install --upgrade pip
      - pip --version

# jobs:
#   fast_finish: true
#   allow_failures:
#     - python: nightly
#     - name: Lint, via Black

#   include:
#     - name: Lint, via Black
#       python: 3.8
#       script:
#         - black --version
#         - black --check . --verbose --diff

#     # Python 3.6 Tests
#     - name: Python 3.6 on Linux
#       python: 3.6
#     - <<: *test_mac
#       name: Python 3.6 on MacOS
#       python: 3.6
#       env:
#         - JRNL_PYTHON_VERSION=3.6.8
#     - <<: *test_windows
#       name: Python 3.6 on Windows
#       python: 3.6
#       env:
#         - JRNL_PYTHON_VERSION=3.6.8
#         - PATH=/c/Python36:/c/Python36/Scripts:$PATH
#         - PYTHONIOENCODING=UTF-8

#     # Python 3.7 Tests
#     - name: Python 3.7 on Linux
#       python: 3.7
#     - <<: *test_mac
#       name: Python 3.7 on MacOS
#       python: 3.7
#       env:
#         - JRNL_PYTHON_VERSION=3.7.5
#     - <<: *test_windows
#       name: Python 3.7 on Windows
#       python: 3.7
#       env:
#         - JRNL_PYTHON_VERSION=3.7.5
#         - PATH=/c/Python37:/c/Python37/Scripts:$PATH
#         - PYTHONIOENCODING=UTF-8

#     # Python 3.8 Tests
#     - name: Python 3.8 on Linux
#       python: 3.8
#     - <<: *test_mac
#       name: Python 3.8 on MacOS
#       python: 3.8
#       env:
#         - JRNL_PYTHON_VERSION=3.8.0
#     - <<: *test_windows
#       name: Python 3.8 on Windows
#       python: 3.8
#       env:
#         - JRNL_PYTHON_VERSION=3.8.0
#         - PATH=/c/Python38:/c/Python38/Scripts:$PATH
#         - PYTHONIOENCODING=UTF-8

#     # ... and beyond!
#     - name: Python nightly on Linux
#       python: nightly

#     # Specialty tests
#     - name: Python 3.7 on Linux, not UTC
#       python: 3.7
#       env:
#         - TZ=America/Edmonton

   
